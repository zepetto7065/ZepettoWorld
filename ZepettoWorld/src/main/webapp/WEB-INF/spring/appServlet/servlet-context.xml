<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />



	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="kr.co.ca" />

	<!-- Tiles 뷰 리졸버 -->
	<beans:bean id="tielsViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	    <beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- Tiles 설정 파일 -->
	<beans:bean id="tilesConfigurer"
	    class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property value="10485760" name="maxUploadSize"></beans:property>
	</beans:bean>

	<beans:bean class="java.lang.String" id="uploadPath">
		<beans:constructor-arg value="C:\\zzz\\upload"></beans:constructor-arg>
	</beans:bean>

	<!-- properties 설정 파일 -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location" value="/WEB-INF/config/config.properties"/>
    </beans:bean>

	<!-- NaverLoginBO Class에 대한 Bean 설정 -->
	<beans:bean id="naverLoginBO" class="kr.co.bo.NaverLoginBO" />

	<beans:bean id="sampleInterceptor" class="kr.co.bo.SampleInterceptor" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/interceptor/doA"/>
			<mvc:mapping path="/interceptor/doB"/>
			<beans:ref bean="sampleInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<beans:bean id="LoginInterceptor" class="kr.co.bo.LoginInterceptor" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/login/loginPost"/>
			<mvc:mapping path="/login/kakaoCallback"/>
			<beans:ref bean="LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 세션 뒤로가기 방지 -->
	<mvc:interceptors>
		<mvc:interceptor>
	    <mvc:mapping path="/**/*" />
	    <beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
		<beans:property name="cacheSeconds" value="0" />
		<beans:property name="useExpiresHeader" value="true" />
		<beans:property name="useCacheControlHeader" value="true" />
		<beans:property name="useCacheControlNoStore" value="true" />
	    </beans:bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans:beans>
